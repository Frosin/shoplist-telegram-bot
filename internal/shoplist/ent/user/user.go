// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTelegramID holds the string denoting the telegram_id field in the database.
	FieldTelegramID = "telegram_id"
	// FieldTelegramUsername holds the string denoting the telegram_username field in the database.
	FieldTelegramUsername = "telegram_username"
	// FieldComunityID holds the string denoting the comunity_id field in the database.
	FieldComunityID = "comunity_id"
	// FieldToken holds the string denoting the token field in the database.
	FieldToken = "token"
	// FieldChatID holds the string denoting the chat_id field in the database.
	FieldChatID = "chat_id"
	// EdgeShopping holds the string denoting the shopping edge name in mutations.
	EdgeShopping = "shopping"
	// Table holds the table name of the user in the database.
	Table = "users"
	// ShoppingTable is the table that holds the shopping relation/edge.
	ShoppingTable = "shoppings"
	// ShoppingInverseTable is the table name for the Shopping entity.
	// It exists in this package in order to avoid circular dependency with the "shopping" package.
	ShoppingInverseTable = "shoppings"
	// ShoppingColumn is the table column denoting the shopping relation/edge.
	ShoppingColumn = "user_shopping"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldTelegramID,
	FieldTelegramUsername,
	FieldComunityID,
	FieldToken,
	FieldChatID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// ComunityIDValidator is a validator for the "comunity_id" field. It is called by the builders before save.
	ComunityIDValidator func(string) error
	// TokenValidator is a validator for the "token" field. It is called by the builders before save.
	TokenValidator func(string) error
)
